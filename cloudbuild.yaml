images:
  - 'gcr.io/agendatec-gcp-proyect/agendatec-backend'

availableSecrets:
  secretManager:
    - versionName: 'projects/371160271556/secrets/FIREBASE_API_KEY/versions/latest'
      env: 'FIREBASE_API_KEY'
    - versionName: 'projects/371160271556/secrets/DATABASE_URL/versions/latest'
      env: 'DATABASE_URL'
    - versionName: 'projects/371160271556/secrets/FIREBASE_JSON/versions/latest'
      env: 'FIREBASE_JSON'

options:
  logging: 'CLOUD_LOGGING_ONLY'

steps:
  # Paso 1: "Montar" el secret escribiÃ©ndolo en un archivo en el container
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Mount secret file'
    entrypoint: 'bash'
    args: [ '-c', 'echo "$$FIREBASE_JSON" > /usr/src/app/firebase_service_account.json' ]
    secretEnv: [ 'FIREBASE_JSON' ]

  # Paso 2: Docker build
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t', 'gcr.io/agendatec-gcp-proyect/agendatec-backend', '.',
      '--build-arg', 'FIREBASE_API_KEY=${_FIREBASE_API_KEY}',
      '--build-arg', 'DATABASE_URL=${_DATABASE_URL}'
    ]
    secretEnv: ['FIREBASE_API_KEY', 'DATABASE_URL']

  # Paso 3: Docker push to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/agendatec-gcp-proyect/agendatec-backend']

  # Paso 4: Deploy to Cloud Run with the previous docker image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: ['run', 'deploy', 'agendatec-backend',
           '--image', 'gcr.io/agendatec-gcp-proyect/agendatec-backend',
           '--region', 'us-central1', '--platform', 'managed',
           '--allow-unauthenticated']